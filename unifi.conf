##### Logstash Input File
input {  

  udp {
    type => "syslog"
    port => 5515
    }
}
filter {
    grok {
      match => { "message" => [ 
                           '%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:routername} \[%{DATA:syslog_program}\] DESCR="%{DATA:fwrulename}" IN=%{GREEDYDATA} SRC=%{IP:source-ip} DST=%{IP:destination-ip} LEN=%{GREEDYDATA} PROTO=%{DATA:protocol} %{GREEDYDATA}', 
                           '%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:routername} \[%{DATA:syslog_program}\] DESCR="%{DATA:fwrulename}" IN=%{GREEDYDATA} SRC=%{IP:source-ip} DST=%{IP:destination-ip} LEN=%{GREEDYDATA} PROTO=%{DATA:protocol} SPT=%{DATA:source-port} DPT=%{DATA:destination-port} SEQ=%{GREEDYDATA} ACK=%{GREEDYDATA} WINDOW=%{GREEDYDATA} %{DATA:status} URGP=%{GREEDYDATA}'
                              ]
               }        
      add_tag => ['UniFi','Firewall']
      remove_field => ["message", "[event][original]"]
        }
    if "UniFi" not in [tags] { drop { } }

}

output {

                elasticsearch {
                   hosts => ["https://192.xxx.xxx.xxx:9200"] ### Type your Elastic IP
                   ssl_certificate_authorities => ["/etc/logstash/certs/http_ca.crt"] #### You need to mention the elastic CA file, usaully it it in /etc/elasticsearch/certs, OR you can just add the elastic CA root file to the java keystore. 
                   user => "logstash_internal" # type the logstash user or other privilieged user.
                   template_name => "unifi" # choose the template you want to use to use when creating new indexs.
                   password => "xxxxxxxx" # type the logstash_internal or other privileged user.
                   index => "unifi-%{+YYYY.MM.dd}"
                }

}
